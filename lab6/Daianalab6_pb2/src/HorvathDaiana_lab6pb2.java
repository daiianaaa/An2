// Write a Java application which, within the main() method, contains a sequence of code
// that may throw various exceptions, such as ArithmeticException,
// ArrayIndexOutOfBoundsException, NullPointerException, NumberFormatException,
// as well as others which you consider to be useful for testing. In the catch block show
// the corresponding message generated by these exceptions.
// The finally block just prints the message, "I may or may not have caught an exception".

import java.util.Scanner;

public class HorvathDaiana_lab6pb2 {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Integer x = null;
        Integer x1 = 2;
        int b=0;
        int c=5;
        System.out.println("Enter the number of elements of the vector: ");
        int n = scanner.nextInt();
        double values[] = new double[n];
        System.out.println("Enter " + n + " double values: ");
        for (int i = 0; i < n; i++) {
            values[i] = scanner.nextDouble();
        }
        try {
            System.out.println("Enter the index you want to access: ");
            int a = scanner.nextInt();
            System.out.println("The element you want to access is: " + values[a]);
            System.out.println("The sum of the numbers is: " + (x + x1));
            System.out.println("The division of the numbers is: "+c/b);

        } catch (NumberFormatException e) {
            System.out.println("The number has the wrong format!");
        } catch (ArrayIndexOutOfBoundsException e) {
            System.out.println("The index is negative or greater than the number of elements! ");
        } catch (NullPointerException e) {
            System.out.println("The numbers cannot be added!");
        }
        catch(ArithmeticException e){
            System.out.println("Division by 0!");
        }
        finally {
            System.out.println("I may or may not have caught an exception");
        }
    }
}